heat_template_version: "2021-04-16"
description: "By Jean-Hanna SALEH and Alexandre LOU"

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: default_key
  image_id:
    type: string
    description: Name of the image id to assign to servers
    default: default_image

resources:
  ########VOLUME########

  Volume_1: 
    type: "OS::Cinder::Volume"
    properties: 
      size: 2
      name: 08_volume_projet
  Volume_attachment_1:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: Volume_1 }
      instance_uuid: { get_resource: Server_2 }
    depends_on: Server_2

  ########NETWORK########

  Net_1: 
    type: "OS::Neutron::Net"
    properties: 
      admin_state_up: true
      name: 08_network_projet

  Subnet_1: 
    type: "OS::Neutron::Subnet"
    properties: 
      cidr: "10.1.1.0/24"
      network_id: { get_resource: Net_1 }
      name: 08_subnetwork_projet
      gateway_ip: "10.1.1.1"
      ip_version: 4
    depends_on: Net_1

  ########ROUTER########

  Router_1: 
    type: "OS::Neutron::Router"
    properties: 
      external_gateway_info: 
        network: External-ENSSAT
      admin_state_up: true
      name: 08_router_projet
  
  Router_1_Interface_1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: Router_1 }
      subnet_id: {get_resource: Subnet_1}
    depends_on: [Router_1, Subnet_1]

  ########SECURITY-GROUP########

  SecGroup1:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22
        
  SecGroup2:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 443
          port_range_max: 443

  #######FLOATING IP########

  FloatingIP_1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: External-ENSSAT

  ########PORT########

  Port_1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Net_1 }
      security_groups:
        - default
        - { get_resource: SecGroup1 }
        - { get_resource: SecGroup2 }
    depends_on: [Net_1, SecGroup1, SecGroup2]

  Port_2:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Net_1 }
      security_groups:
        - default
        - { get_resource: SecGroup1 }
        - { get_resource: SecGroup2 }
    depends_on: [Net_1, SecGroup1, SecGroup2]

  ########FLOATING IP ATTACHMENT############

  #FloatingIP_Attachment_1:
  #  type: OS::Neutron::FloatingIPAssociation
  #  properties:
  #    floatingip_id: { get_resource: FloatingIP_1}
  #    port_id: { get_resource: Port_1}
  #  depends_on: [FloatingIP_1, Port_1]

  ########SERVER########

  Server_1: 
    type: "OS::Nova::Server"
    properties: 
      #security_groups: 
      #  - "49685c6a-fc42-430e-b1bd-3ebb09f3133c"
      #  - "9e4e6326-deb1-4763-b4a1-04a4077fcdd1"
      #  - "ebc155a0-e118-41c5-b9e8-67b573496d98"
      networks: 
        #- subnet: { get_resource: Subnet_1 }
        - port: { get_resource: Port_1 }
      name: 08_projet_VM1
      flavor: "m1.mini"
      image: { get_param: image_id }
      availability_zone: nova
      key_name: {get_param: key_name}

      user_data_format: RAW
      user_data: |
        #cloud-config
        chpasswd:
          list: |
            cloud-user:toto
            root:toto
          expire: False
    depends_on: Port_1
  
  # user config
  boot_user:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        chpasswd:
          list: |
            cloud-user:toto
            root:toto
          expire: False

  # docker compose
  boot_docker_compose_mysql:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/sh
        echo "version: '2'
        services:
            db:
                image: mysql/mysql-server
                volumes:
                    - ~/.docker/mysql:/var/lib/mysql
                ports:
                    - "3305:3306"
                environment:
                    - MYSQL_DATABASE=enssapp
                    - MYSQL_ROOT_PASSWORD=pUr3&H0sHBabY" > docker-compose.yml
        cd / && docker-compose up
          
        

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: boot_user}
      - config: {get_resource: boot_docker_compose_mysql}
    depends_on: [boot_user, boot_docker_compose_mysql]

  Server_2: 
    type: "OS::Nova::Server"
    properties: 
      #security_groups: 
      #  - "49685c6a-fc42-430e-b1bd-3ebb09f3133c"
      #  - "9e4e6326-deb1-4763-b4a1-04a4077fcdd1"
      #  - "ebc155a0-e118-41c5-b9e8-67b573496d98"
      networks: 
        #- subnet: { get_resource: Subnet_1 }
        - port: { get_resource: Port_2 }
      name: 08_projet_VM2
      flavor: "m1.mini"
      image: { get_param: image_id }
      availability_zone: nova
      key_name: {get_param: key_name}
      
      user_data_format: SOFTWARE_CONFIG
      user_data: { get_resource: server_init }
    depends_on: [Port_2, server_init]